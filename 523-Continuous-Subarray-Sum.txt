class Solution {
public:
    bool checkSubarraySum(vector<int>& nums, int k) 
    {
        // HashMap of Remainders
        unordered_map <int, int> mp;
        mp[0] = -1;

        int sum = 0;

        // Check for good  subarray
        for(int i = 0; i < nums.size(); i++)
        {
            sum += nums[i];

            // if remainder of (sum / k) exist in hashmap
            if(mp.find(sum % k) != mp.end()) 
            {
                if(i - mp[sum % k] >= 2) return true;
            }

            // add remainder of (sum / k) in hashmap
            else
            {
                mp[sum % k] = i;
            }
        }
        return false;
    }
}; 