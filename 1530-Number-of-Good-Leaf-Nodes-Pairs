/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution 
{
public:
    int ans = 0;
    vector <int> help(TreeNode* root, int d)
    {
        if(root == NULL) return {0};
        if(root -> left == NULL && root -> right == NULL) return {1};
        vector <int> l = help(root -> left, d);
        vector <int> r = help(root -> right, d);
        for(auto a : l)
        {
            for(auto b : r)
            {
                if((a && b) && (a+b) <= d) ans++;
            }
        }
        vector <int> ret;
        for(auto a : l) if(a) ret.push_back(a+1);
        for(auto b : r) if(b) ret.push_back(b+1);

        return ret;
    }

    int countPairs(TreeNode* root, int distance) 
    {
        help(root, distance);
        return ans;
    }
};
